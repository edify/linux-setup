# Copyright 2016 Edify Software Consulting
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Here we describe every software we may want to install
- hosts: all
  tasks:
    - lineinfile: dest=/etc/apt/apt.conf regexp="^Acquire::http::Proxy \"http://192.168.241.21:3142/\";" state=absent
      become: yes
      become_method: sudo
    # Edify Debian repo
    - name: Install Edify repo key
      apt_key: url='https://{{artifactory_username}}:{{artifactory_password}}@edify.jfrog.io/edify/api/gpg/key/public' state=present
      become: yes
      become_method: sudo
    - name: Install Edify repo
      apt_repository: repo='deb https://{{artifactory_username}}:{{artifactory_password}}@edify.jfrog.io/edify/debian-local stable main'
      become: yes
      become_method: sudo

    # Skype
    - name: Install Skype repo key
      apt_key: url='https://repo.skype.com/data/SKYPE-GPG-KEY' state=present
      become: yes
      become_method: sudo
    - name: Install Skype repo
      apt_repository: repo='deb https://repo.skype.com/deb stable main' state=present
      become: yes
      become_method: sudo

    # NodeJS
    - name: Install NodeJS repo key
      apt_key: url=https://deb.nodesource.com/gpgkey/nodesource.gpg.key state=present
      become: yes
      become_method: sudo
    - name: Install NodeJS repo
      apt_repository: repo='deb https://deb.nodesource.com/node_6.x {{ansible_distribution_release}} main' state=present
      become: yes
      become_method: sudo

    # Heroku Toolbelt
    - name: Install Heroku Toolbelt repo key
      apt_key: url=https://toolbelt.heroku.com/apt/release.key state=present
      become: yes
      become_method: sudo
    - name: Install Heroku Toolbelt repo
      apt_repository: repo='deb http://toolbelt.heroku.com/ubuntu ./' state=present
      become: yes
      become_method: sudo

    # Infinality
    - name: Install OpenJDK infinality repo
      apt_repository: repo='ppa:no1wantdthisname/openjdk-fontfix' state=present
      become: yes
      become_method: sudo
    - name: Installinfinality repo
      apt_repository: repo='ppa:no1wantdthisname/ppa' state=present
      become: yes
      become_method: sudo

    # Golang
    - name: Install Golang repo
      apt_repository: repo='ppa:ubuntu-lxc/lxd-stable' state=present
      become: yes
      become_method: sudo

    # Docker
    - name: Install Docker repo key
      apt_key: keyserver=p80.pool.sks-keyservers.net id=58118E89F3A912897C070ADBF76221572C52609D
      become: yes
      become_method: sudo
    - name: Install Docker repo
      apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-{{ansible_distribution_release}} main'
      become: yes
      become_method: sudo

    # Numix
    - name: Install Numix repo
      apt_repository: repo='ppa:numix/ppa'
      become: yes
      become_method: sudo
      when: kubuntu == "false"

    # Arc
    - name: Install Arc Theme repo key
      apt_key: url=http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_16.04/Release.key state=present
      become: yes
      become_method: sudo
      when: kubuntu == "false"

    - name: Install Arc Theme repo
      apt_repository: repo='deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_16.04/ /' state=present
      become: yes
      become_method: sudo
      when: kubuntu == "false"

    # Moka
    - name: Install Moka repo
      apt_repository: repo='ppa:moka/stable'
      become: yes
      become_method: sudo
      when: kubuntu == "false"

    # Ubuntu Make
    - name: Install Ubuntu Make repo
      apt_repository: repo='ppa:ubuntu-desktop/ubuntu-make'
      become: yes
      become_method: sudo

    # Ruby
    - name: Install RubyNG repo
      apt_repository: repo='ppa:brightbox/ruby-ng'
      become: yes
      become_method: sudo

    # Gradle
    - name: Install Gradle PPA repo
      apt_repository: repo='ppa:cwchien/gradle'
      become: yes
      become_method: sudo

    # Google Chrome
    - name: Install Google Chrome repo key
      apt_key: url='https://dl-ssl.google.com/linux/linux_signing_key.pub' state=present
      become: yes
      become_method: sudo
    - name: Install Google Chrome repo
      apt_repository: repo='deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' state=present
      become: yes
      become_method: sudo

    # Base packages Ubuntu only
    - name: Install base system packages for Ubuntu desktop only
      apt: name={{ item }} state=latest
      become: yes
      become_method: sudo
      when: kubuntu == "false"
      with_items:
        - numix-gtk-theme
        - numix-icon-theme-circle
        - moka-icon-theme
        - unity-tweak-tool
        - arc-theme

    - name: Install base system packages
      apt: name={{ item }} state=latest
      become: yes
      become_method: sudo
      with_items:
        - fontconfig-infinality
        - openjdk-8-jdk
        - nodejs
        - heroku-toolbelt
        - golang
        - docker-engine
        - ubuntu-make
        - ruby2.3
        - ruby2.3-dev
        - gradle
        - alpha
        - skypeforlinux
        - vagrant
        - prey
        - slack-desktop
        - atom
        - google-chrome-stable

    - name: Remove old versions base packages
      apt: name={{ item }} state=absent
      become: yes
      become_method: sudo
      with_items:
        - openjdk-7-jre-headless
        - openjdk-7-jre

